{
    "comments": {
        // symbol used for single line comment. Remove this entry if your language does not support line comments
        "lineComment": "#",
        // symbols used for start and end a block comment. Remove this entry if your language does not support block comments
        "blockComment": [
            "{*",
            "*}"
        ]
    },
    // symbols used as brackets
    "brackets": [
        [
            "{",
            "}"
        ],
        [
            "[",
            "]"
        ],
        [
            "(",
            ")"
        ]
    ],
    // symbols that are auto closed when typing
   // "autoClosingPairs": [
   //     [
   //         "{",
   //         "}"
   //     ],
   //     [
   //         "[",
   //         "]"
   //     ],
   //     [
   //         "(",
   //         ")"
   //     ],
   //     [
   //         "\"",
   //         "\""
   //     ],
   //     [
   //         "'",
   //         "'"
   //     ]
   // ],	
   "autoClosingPairs": [
    { "open": "{", "close": "}" },
    { "open": "[", "close": "]" },
    { "open": "(", "close": ")" },
    { "open": "'", "close": "'", "notIn": ["string", "comment"] },
    { "open": "\"", "close": "\"", "notIn": ["string"] },
    { "open": "`", "close": "`", "notIn": ["string", "comment"] },
    { "open": "/**", "close": " */", "notIn": ["string"] }
   ],
    // symbols that that can be used to surround a selection
    "surroundingPairs": [
        [
            "{",
            "}"
        ],
        [
            "[",
            "]"
        ],
        [
            "(",
            ")"
        ],
        [
            "\"",
            "\""
        ],
        [
            "'",
            "'"
        ]
    ],
    // folding
    "folding": {
        "offSide": true,
        "markers": {
            "start": "(^\\s*FUNCTION\\b|^\\s*MAIN\\b|^\\s*#\\s*region\\b)",
            "end": "(^\\s*END\\s*FUNCTION\\b|^\\s*END\\s*MAIN\\b|^\\s*#\\s*endregion\\b)"
        }
    }
	//,
    //Indent
    //"indentationRules": {
    //    "increaseIndentPattern": "((\\b(else|function|then|do|repeat)\\b((?!\\b(end|until)\\b).)*)|(\\{\\s*))$",
    //    "decreaseIndentPattern": "^\\s*((\\b(elseif|else|end|until)\\b)|(\\})|(\\)))"
    //}
}